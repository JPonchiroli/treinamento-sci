unit uCadastroEspacoCafe;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, uCadastroPadrao, ImgList, ComCtrls, ToolWin, DBClient, StdCtrls,
  uEditNumerico;

type
  TfrCadastroEspacoCafe = class(TfrCadastroPadrao)
    eNomeEspacoCafe: TEdit;
    enLotacaoMaximaEspacoCafe: TEditNumerico;
    enLotacaoAtualEspacoCafe: TEditNumerico;
    lNomeEspacoCafe: TLabel;
    lLotacaoMaximaEspacoCafe: TLabel;
    lLotacaoAtualEspacoCafe: TLabel;
    lCodigoEspacoCafe: TLabel;
    enCodigoEspacoCafe: TEditNumerico;
    procedure tbExcluirClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    function setTabela: TClientDataSet; override;
    function setIndice: string; override;
    function setEditCodigo: TEdit; override;
    procedure Salvar; override;
    function Consultar: TForm; override;
    procedure Carregar; override;
    function Validar: Boolean; override;
    function ConsultarEspacoCafe: Boolean;
    function ConsultarChaveEstrangeira: Boolean;
  end;

var
  frCadastroEspacoCafe: TfrCadastroEspacoCafe;

implementation

uses uConsultaEspacoCafe, uDmProjeto;

{$R *.dfm}

{ TfrCadastroEspacoCafe }

procedure TfrCadastroEspacoCafe.Carregar;
begin
  inherited;
  eNomeEspacoCafe.Text :=  Tabela.FieldByName('BDNOMEESPACOCAFE').AsString;
  enLotacaoMaximaEspacoCafe.Text := Tabela.FieldByName('BDLOTACAOMAXIMAESPACOCAFE').AsString;
  enLotacaoAtualEspacoCafe.Text := Tabela.FieldByName('BDLOTACAOATUALESPACOCAFE').AsString;
end;

function TfrCadastroEspacoCafe.Consultar: TForm;
begin
  Result := TfrConsultaEspacoCafe.Create(enCodigoEspacoCafe);
end;

function TfrCadastroEspacoCafe.ConsultarEspacoCafe: Boolean;
var
  wCodigoEspaco: Integer;
begin
  if not dmProjeto.SQLConnection.Connected then
    dmProjeto.SQLConnection.Connected := True;

  if dmProjeto.cdsConsultaEspacoCafe.Active then
    dmProjeto.cdsConsultaEspacoCafe.Close;

  dmProjeto.cdsConsultaEspacoCafe.Close;
  dmProjeto.qConsultaEspacoCafe.SQL.Clear;

  dmProjeto.qConsultaEspacoCafe.SQL.Add(
  'select bdcodespacocafe ' +
  'from tespacocafe ' +
  'where bdcodespacocafe = :bdcodespacocafe ');

  dmProjeto.qConsultaEspacoCafe.ParamByName('bdcodespacocafe').AsInteger := enCodigoEspacoCafe.Codigo;
  dmProjeto.cdsConsultaEspacoCafe.Open;
  wCodigoEspaco := dmProjeto.cdsConsultaEspacoCafe.FieldByName('bdcodespacocafe').AsInteger;

  if wCodigoEspaco > 0 then
    Result := true
  else
    Result := false;
end;

procedure TfrCadastroEspacoCafe.Salvar;
begin
  inherited;
  Tabela.FieldByName('BDCODESPACOCAFE').AsInteger := enCodigoEspacoCafe.Codigo;
  Tabela.FieldByName('BDNOMEESPACOCAFE').AsString := eNomeEspacoCafe.Text;
  Tabela.FieldByName('BDLOTACAOMAXIMAESPACOCAFE').AsInteger := enLotacaoMaximaEspacoCafe.Codigo;
  Tabela.FieldByName('BDLOTACAOATUALESPACOCAFE').AsInteger := enLotacaoAtualEspacoCafe.Codigo;
end;

function TfrCadastroEspacoCafe.setEditCodigo: TEdit;
begin
  Result := enCodigoEspacoCafe;
end;

function TfrCadastroEspacoCafe.setIndice: string;
begin
  Result := 'BDCODESPACOCAFE';
end;

function TfrCadastroEspacoCafe.setTabela: TClientDataSet;
begin
  Result := dmProjeto.cdsEspacoCafe;
end;

function TfrCadastroEspacoCafe.Validar: Boolean;
begin
  if (eNomeEspacoCafe.Text = EmptyStr) or
     (enLotacaoMaximaEspacoCafe.Text = EmptyStr) or
     (enLotacaoAtualEspacoCafe.Text = EmptyStr) then
  begin
    ShowMessage('Erro de Inserção. O cadastro possui campos vazios');
    Result := false;
  end else
  begin
    ShowMessage('Espaço de Café Criado com Sucesso!');
    Result := true;
  end;
end;

procedure TfrCadastroEspacoCafe.tbExcluirClick(Sender: TObject);
begin
  if not ConsultarEspacoCafe then
    ShowMessage('Espaço de café não cadastrada, favor escolher outro espaço')
  else if not ConsultarChaveEstrangeira then
    ShowMessage('Espaço de café já cadastrado em uma etapa, favor escolher outro espaço')
  else
    inherited;
end;

function TfrCadastroEspacoCafe.ConsultarChaveEstrangeira: Boolean;
var
  wChaveEstrangeira: Integer;
begin
  if not dmProjeto.SQLConnection.Connected then
    dmProjeto.SQLConnection.Connected := True;

  if dmProjeto.cdsConsultaEspacoCafe.Active then
    dmProjeto.cdsConsultaEspacoCafe.Close;

  dmProjeto.cdsConsultaEspacoCafe.Close;
  dmProjeto.qConsultaEspacoCafe.SQL.Clear;

  dmProjeto.qConsultaEspacoCafe.SQL.Add(
  'select bdcodespacocafe ' +
  'from tetapa ' +
  'where bdcodespacocafe = :bdcodespacocafe ');

  dmProjeto.qConsultaEspacoCafe.ParamByName('bdcodespacocafe').AsInteger := enCodigoEspacoCafe.Codigo;
  dmProjeto.cdsConsultaEspacoCafe.Open;
  wChaveEstrangeira := dmProjeto.cdsConsultaEspacoCafe.FieldByName('bdcodespacocafe').AsInteger;

  if wChaveEstrangeira > 0 then
    Result := false
  else
    Result := true;
end;

end.
